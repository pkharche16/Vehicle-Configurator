{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pkhar\\\\Desktop\\\\CDAC-DAC-2k24\\\\Project\\\\vehicle_configurator_front_end_spring_boot\\\\src\\\\components\\\\AlternateModifier.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/AlternateModifier.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlternateModifier = () => {\n  _s();\n  const [components, setComponents] = useState([]);\n  const location = useLocation();\n  //const selectedModelDetails = location.state.selectedModelDetails;\n  const selectedId = location.state.selectedId;\n  //alert(`Selected ID: ${selectedId}`);\n  const [selectedComponentIds, setSelectedComponentIds] = useState([]);\n  const [alternateComponents, setAlternateComponents] = useState({});\n  const [selectedAlternateComponentIds, setSelectedAlternateComponentIds] = useState({});\n  const orderSize = location.state.orderSize; // Retrieve the order size from\n  const [totalDelta, setTotalDelta] = useState(0);\n  useEffect(() => {\n    const fetchComponents = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/vehicles/config/${selectedId}/Y`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const data = await response.json();\n        setComponents(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchComponents();\n  }, []);\n  const handleCheckboxChange = async (compId, checked) => {\n    if (checked) {\n      setSelectedComponentIds(prevIds => [...prevIds, compId]);\n      try {\n        const response = await fetch(`http://localhost:8080/api/alternate-components/${selectedId}/${compId}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch alternate components\");\n        }\n        const data = await response.json();\n        setAlternateComponents(prevState => ({\n          ...prevState,\n          [compId]: data\n        }));\n        setSelectedAlternateComponentIds(prevState => ({\n          ...prevState,\n          [compId]: selectedAlternateComponentIds[compId] || \"\" // Set the previously selected option when checkbox is checked\n        }));\n      } catch (error) {\n        console.error(\"Error fetching alternate components:\", error);\n      }\n    } else {\n      setSelectedComponentIds(prevIds => prevIds.filter(id => id !== compId));\n      setAlternateComponents(prevState => {\n        const newState = {\n          ...prevState\n        };\n        delete newState[compId];\n        return newState;\n      });\n      setSelectedAlternateComponentIds(prevState => {\n        const newState = {\n          ...prevState\n        };\n        delete newState[compId];\n        return newState;\n      });\n    }\n  };\n  const navigate = useNavigate();\n  const selectedDropdownIds = Object.values(selectedAlternateComponentIds);\n  const nonCheckedComponentIds = components.filter(component => !selectedComponentIds.includes(component.comp_id)).map(component => component.comp_id);\n\n  // const handleInvoiceClick = () => {\n  //   const fetchAndSumDeltaPrices = async () => {\n  //     try {\n  //       console.log(selectedDropdownIds); // Log the IDs\n  //       const deltaPrices = await Promise.all(\n  //         selectedDropdownIds.map(async (id) => {\n  //           const response = await fetch(\n  //             `http://localhost:8080/api/alternate-components/alt/${selectedId}/${id}`\n  //           );\n  //           if (!response.ok) {\n  //             throw new Error(`HTTP error! status: ${response.status}`);\n  //           }\n  //           const data = await response.json();\n  //           //console.log(data); // Log the response data\n  //           const deltaPrice = parseFloat(data.deltaPrice);\n\n  //           return isNaN(deltaPrice) ? 0 : deltaPrice;\n  //         })\n  //       );\n\n  //       const total = deltaPrices.reduce((a, b) => a + b, 0);\n  //       setTotalDelta(total);\n  //       alert(totalDelta);\n  //       //setTotalDeltaPrice(total);\n  //     } catch (error) {\n  //       console.log(\"Fetch failed\", error);\n  //     }\n  //   };\n\n  //   // Call the function\n  //   fetchAndSumDeltaPrices();\n\n  //   //alert(totalDeltaPrice);\n  //   navigate(\"/InvoiceGenerator\", {\n  //     state: {\n  //       nonCheckedComponentIds: nonCheckedComponentIds,\n  //       selectedDropdownIds: selectedDropdownIds,\n  //       selectedId: selectedId,\n  //       orderSize: orderSize,\n  //       totalDeltaa: totalDelta\n  //       // totalDeltaPrice: totalDeltaPrice,\n  //     },\n  //   });\n  // };\n  //////////////////////////////////////////\n  const handleInvoiceClick = () => {\n    const fetchAndSumDeltaPrices = async () => {\n      try {\n        console.log(selectedDropdownIds); // Log the IDs\n        const deltaPrices = await Promise.all(selectedDropdownIds.map(async id => {\n          const response = await fetch(`http://localhost:8080/api/alternate-components/alt/${selectedId}/${id}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          //console.log(data); // Log the response data\n          const deltaPrice = parseFloat(data.deltaPrice);\n          return isNaN(deltaPrice) ? 0 : deltaPrice;\n        }));\n        const total = deltaPrices.reduce((a, b) => a + b, 0);\n        setTotalDelta(total);\n        navigateToInvoice(total); // Navigate with updated totalDelta\n      } catch (error) {\n        console.log(\"Fetch failed\", error);\n      }\n    };\n\n    // Function to navigate to InvoiceGenerator\n    const navigateToInvoice = totalDelta => {\n      navigate(\"/InvoiceGenerator\", {\n        state: {\n          nonCheckedComponentIds: nonCheckedComponentIds,\n          selectedDropdownIds: selectedDropdownIds,\n          selectedId: selectedId,\n          orderSize: orderSize,\n          totalDeltaa: totalDelta // Pass updated totalDelta\n        }\n      });\n    };\n\n    // Call the function\n    fetchAndSumDeltaPrices();\n  };\n  const handleAlternateChange = (compId, selectedValue) => {\n    setSelectedAlternateComponentIds(prevState => ({\n      ...prevState,\n      [compId]: selectedValue\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Components List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: components.map((component, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-wrapper-7\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: index,\n            className: \"tgl tgl-ios\",\n            type: \"checkbox\",\n            checked: selectedComponentIds.includes(component.comp_id),\n            onChange: e => handleCheckboxChange(component.comp_id, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tgl-btn\",\n            for: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"compnamecheckbox\",\n          children: component.comp_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), selectedComponentIds.includes(component.comp_id) && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAlternateComponentIds[component.comp_id] || \"\",\n          onChange: e => handleAlternateChange(component.comp_id, e.target.value),\n          disabled: !selectedComponentIds.includes(component.comp_id),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Alternate Component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), console.log(alternateComponents), alternateComponents[component.comp_id] && alternateComponents[component.comp_id].map((alternateComponent, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: alternateComponent.id,\n            children: [alternateComponent.comp_name, \" (Delta Price:\", \" \", alternateComponent.delta_price, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 23\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInvoiceClick,\n      children: \"Generate Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(AlternateModifier, \"br2bZ0HQ2/rd5KZ6jNXjTSwnU44=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AlternateModifier;\nexport default AlternateModifier;\nvar _c;\n$RefreshReg$(_c, \"AlternateModifier\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","AlternateModifier","_s","components","setComponents","location","selectedId","state","selectedComponentIds","setSelectedComponentIds","alternateComponents","setAlternateComponents","selectedAlternateComponentIds","setSelectedAlternateComponentIds","orderSize","totalDelta","setTotalDelta","fetchComponents","response","fetch","ok","Error","data","json","error","console","handleCheckboxChange","compId","checked","prevIds","prevState","filter","id","newState","navigate","selectedDropdownIds","Object","values","nonCheckedComponentIds","component","includes","comp_id","map","handleInvoiceClick","fetchAndSumDeltaPrices","log","deltaPrices","Promise","all","status","deltaPrice","parseFloat","isNaN","total","reduce","a","b","navigateToInvoice","totalDeltaa","handleAlternateChange","selectedValue","children","fileName","_jsxFileName","lineNumber","columnNumber","index","className","type","onChange","e","target","for","comp_name","value","disabled","alternateComponent","delta_price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pkhar/Desktop/CDAC-DAC-2k24/Project/vehicle_configurator_front_end_spring_boot/src/components/AlternateModifier.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/AlternateModifier.css\";\r\nconst AlternateModifier = () => {\r\n  const [components, setComponents] = useState([]);\r\n  const location = useLocation();\r\n  //const selectedModelDetails = location.state.selectedModelDetails;\r\n  const selectedId = location.state.selectedId;\r\n  //alert(`Selected ID: ${selectedId}`);\r\n  const [selectedComponentIds, setSelectedComponentIds] = useState([]);\r\n  const [alternateComponents, setAlternateComponents] = useState({});\r\n  const [selectedAlternateComponentIds, setSelectedAlternateComponentIds] =\r\n    useState({});\r\n  const orderSize = location.state.orderSize; // Retrieve the order size from\r\n  const [totalDelta, setTotalDelta] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchComponents = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/vehicles/config/${selectedId}/Y`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n        const data = await response.json();\r\n        setComponents(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchComponents();\r\n  }, []);\r\n\r\n  const handleCheckboxChange = async (compId, checked) => {\r\n    if (checked) {\r\n      setSelectedComponentIds((prevIds) => [...prevIds, compId]);\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/alternate-components/${selectedId}/${compId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch alternate components\");\r\n        }\r\n        const data = await response.json();\r\n        setAlternateComponents((prevState) => ({\r\n          ...prevState,\r\n          [compId]: data,\r\n        }));\r\n        setSelectedAlternateComponentIds((prevState) => ({\r\n          ...prevState,\r\n          [compId]: selectedAlternateComponentIds[compId] || \"\", // Set the previously selected option when checkbox is checked\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching alternate components:\", error);\r\n      }\r\n    } else {\r\n      setSelectedComponentIds((prevIds) =>\r\n        prevIds.filter((id) => id !== compId)\r\n      );\r\n      setAlternateComponents((prevState) => {\r\n        const newState = { ...prevState };\r\n        delete newState[compId];\r\n        return newState;\r\n      });\r\n      setSelectedAlternateComponentIds((prevState) => {\r\n        const newState = { ...prevState };\r\n        delete newState[compId];\r\n        return newState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const selectedDropdownIds = Object.values(selectedAlternateComponentIds);\r\n  const nonCheckedComponentIds = components\r\n    .filter((component) => !selectedComponentIds.includes(component.comp_id))\r\n    .map((component) => component.comp_id);\r\n\r\n  // const handleInvoiceClick = () => {\r\n  //   const fetchAndSumDeltaPrices = async () => {\r\n  //     try {\r\n  //       console.log(selectedDropdownIds); // Log the IDs\r\n  //       const deltaPrices = await Promise.all(\r\n  //         selectedDropdownIds.map(async (id) => {\r\n  //           const response = await fetch(\r\n  //             `http://localhost:8080/api/alternate-components/alt/${selectedId}/${id}`\r\n  //           );\r\n  //           if (!response.ok) {\r\n  //             throw new Error(`HTTP error! status: ${response.status}`);\r\n  //           }\r\n  //           const data = await response.json();\r\n  //           //console.log(data); // Log the response data\r\n  //           const deltaPrice = parseFloat(data.deltaPrice);\r\n\r\n  //           return isNaN(deltaPrice) ? 0 : deltaPrice;\r\n  //         })\r\n  //       );\r\n\r\n  //       const total = deltaPrices.reduce((a, b) => a + b, 0);\r\n  //       setTotalDelta(total);\r\n  //       alert(totalDelta);\r\n  //       //setTotalDeltaPrice(total);\r\n  //     } catch (error) {\r\n  //       console.log(\"Fetch failed\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   // Call the function\r\n  //   fetchAndSumDeltaPrices();\r\n\r\n  //   //alert(totalDeltaPrice);\r\n  //   navigate(\"/InvoiceGenerator\", {\r\n  //     state: {\r\n  //       nonCheckedComponentIds: nonCheckedComponentIds,\r\n  //       selectedDropdownIds: selectedDropdownIds,\r\n  //       selectedId: selectedId,\r\n  //       orderSize: orderSize,\r\n  //       totalDeltaa: totalDelta\r\n  //       // totalDeltaPrice: totalDeltaPrice,\r\n  //     },\r\n  //   });\r\n  // };\r\n  //////////////////////////////////////////\r\n  const handleInvoiceClick = () => {\r\n    const fetchAndSumDeltaPrices = async () => {\r\n      try {\r\n        console.log(selectedDropdownIds); // Log the IDs\r\n        const deltaPrices = await Promise.all(\r\n          selectedDropdownIds.map(async (id) => {\r\n            const response = await fetch(\r\n              `http://localhost:8080/api/alternate-components/alt/${selectedId}/${id}`\r\n            );\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            //console.log(data); // Log the response data\r\n            const deltaPrice = parseFloat(data.deltaPrice);\r\n            return isNaN(deltaPrice) ? 0 : deltaPrice;\r\n          })\r\n        );\r\n\r\n        const total = deltaPrices.reduce((a, b) => a + b, 0);\r\n        setTotalDelta(total);\r\n        navigateToInvoice(total); // Navigate with updated totalDelta\r\n      } catch (error) {\r\n        console.log(\"Fetch failed\", error);\r\n      }\r\n    };\r\n\r\n    // Function to navigate to InvoiceGenerator\r\n    const navigateToInvoice = (totalDelta) => {\r\n      navigate(\"/InvoiceGenerator\", {\r\n        state: {\r\n          nonCheckedComponentIds: nonCheckedComponentIds,\r\n          selectedDropdownIds: selectedDropdownIds,\r\n          selectedId: selectedId,\r\n          orderSize: orderSize,\r\n          totalDeltaa: totalDelta, // Pass updated totalDelta\r\n        },\r\n      });\r\n    };\r\n\r\n    // Call the function\r\n    fetchAndSumDeltaPrices();\r\n  };\r\n\r\n  const handleAlternateChange = (compId, selectedValue) => {\r\n    setSelectedAlternateComponentIds((prevState) => ({\r\n      ...prevState,\r\n      [compId]: selectedValue,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Components List</h1>\r\n      <ul>\r\n        {components.map((component, index) => (\r\n          <li key={index}>\r\n            <div className=\"checkbox-wrapper-7\">\r\n              <input\r\n                id={index}\r\n                className=\"tgl tgl-ios\"\r\n                type=\"checkbox\"\r\n                checked={selectedComponentIds.includes(component.comp_id)}\r\n                onChange={(e) =>\r\n                  handleCheckboxChange(component.comp_id, e.target.checked)\r\n                }\r\n              />\r\n              <label className=\"tgl-btn\" for={index}></label></div>\r\n            <span className=\"compnamecheckbox\">{component.comp_name}</span>\r\n            {/* <input\r\n              type=\"checkbox\"\r\n              checked={selectedComponentIds.includes(component.comp_id)}\r\n              onChange={(e) =>\r\n                handleCheckboxChange(component.comp_id, e.target.checked)\r\n              }\r\n            />\r\n            {component.comp_name} */}\r\n            {selectedComponentIds.includes(component.comp_id) && (\r\n              <select\r\n                value={selectedAlternateComponentIds[component.comp_id] || \"\"}\r\n                onChange={(e) =>\r\n                  handleAlternateChange(component.comp_id, e.target.value)\r\n                }\r\n                disabled={!selectedComponentIds.includes(component.comp_id)}\r\n              >\r\n                <option value=\"\">Select Alternate Component</option>\r\n                {console.log(alternateComponents)}\r\n                {alternateComponents[component.comp_id] &&\r\n                  alternateComponents[component.comp_id].map(\r\n                    (alternateComponent, index) => (\r\n                      <option key={index} value={alternateComponent.id}>\r\n                        {alternateComponent.comp_name} (Delta Price:{\" \"}\r\n                        {alternateComponent.delta_price})\r\n                      </option>\r\n                    )\r\n                  )}\r\n              </select>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleInvoiceClick}>Generate Invoice</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlternateModifier;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}